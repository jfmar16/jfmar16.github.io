[
  {
    "objectID": "hw.html",
    "href": "hw.html",
    "title": "DANL200 Homework #4",
    "section": "",
    "text": "1 Data Frame\nAbout this homework :smile: The data.frame spotify_all includes information about Spotify users‚Äô playlists. The unit of observation in spotify_all is a track in a music playlist.\n\nspotify_all &lt;- read_csv('https://bcdanl.github.io/data/spotify_all.csv')\nrmarkdown::paged_table(spotify_all)\n\n\n\n  \n\n\n\n\n\n2 ggplot top 10 artists\n\nQ1c &lt;- spotify_all %&gt;% \n  group_by(artist_name) %&gt;% \n  mutate(n_popular_artist = n()) %&gt;% \n  ungroup() %&gt;% \n  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %&gt;% \n  filter( artist_ranking &lt;= 10) \n  \n# boxplot\nggplot(Q1c,\n       aes(x = pos, y = fct_reorder(artist_name, -artist_ranking)) ) +\n  geom_boxplot() +\n  stat_summary(\n    fun = mean,\n    color = 'red'\n  )"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jake Marcell",
    "section": "",
    "text": "Jake Marcell majors in Applied Mathematics at SUNY Geneseo. When not working on mathematics, Jake enjoys spending time lifting, working and hanging out with friends and family."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Jake Marcell",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  Undergraduate for B.S. in Applied Mathematics | Aug 2022 - May 2026  Minor in Data Analytics  Graduate of Webster Schroeder High School"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Jake Marcell",
    "section": "Experience",
    "text": "Experience\nBeer Market Analytics | Data Analyst Intern | May 2024 - Aug 2024  Delta Sonic Car Wash Sales Associate | Jan 2020 - Present  Clover Jack Farms Co-Owner | May 2017 - Present"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn‚Äôt specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/spotify/spotify.html",
    "href": "posts/spotify/spotify.html",
    "title": "Spotify",
    "section": "",
    "text": "Data Frame\n\nlibrary(tidyverse)\nlibrary(skimr)\nspotify_all &lt;- read_csv('https://bcdanl.github.io/data/spotify_all.csv')\n\n\n\nQ1a\n\ntop_songs &lt;- spotify_all %&gt;%\n  group_by(artist_name, track_name) %&gt;%\n  summarize(popularity = n()) %&gt;%\n  arrange(desc(popularity)) %&gt;%\n  head(10)\ntop_songs\n\n# A tibble: 10 √ó 3\n# Groups:   artist_name [10]\n   artist_name      track_name                          popularity\n   &lt;chr&gt;            &lt;chr&gt;                                    &lt;int&gt;\n 1 Drake            One Dance                                  143\n 2 Kendrick Lamar   HUMBLE.                                    142\n 3 The Chainsmokers Closer                                     129\n 4 DRAM             Broccoli (feat. Lil Yachty)                127\n 5 Post Malone      Congratulations                            119\n 6 Migos            Bad and Boujee (feat. Lil Uzi Vert)        117\n 7 KYLE             iSpy (feat. Lil Yachty)                    115\n 8 Lil Uzi Vert     XO TOUR Llif3                              113\n 9 Amin√©            Caroline                                   107\n10 Khalid           Location                                   102\n\n# This code finds the ten most popular songs and their artists, with the artists\n# being, Drake, Kendrick Lamar, The Chainsmokers, DRAM, Post Malone, Migos, KYLE, \n# Lil Uzi Vert, Amine, Khalid respectively.\n\n\n\nQ1b\n\ntop_artists &lt;- spotify_all %&gt;%\n  group_by(artist_name) %&gt;%\n  summarize(popularity = n()) %&gt;%\n  arrange(desc(popularity)) %&gt;%\n  head(5)\ntop_artists\n\n# A tibble: 5 √ó 2\n  artist_name    popularity\n  &lt;chr&gt;               &lt;int&gt;\n1 Drake                2715\n2 Kanye West           1065\n3 Kendrick Lamar       1035\n4 Rihanna               915\n5 The Weeknd            913\n\n# This code finds the five most popular artists which are Drake, Kanye West, \n# Kendrick Lamar, Rihanna, and The Weekend.\n\nmost_popular_songs &lt;- spotify_all %&gt;%\n  filter(artist_name %in% top_artists$artist_name) %&gt;%\n  group_by(artist_name, track_name) %&gt;%\n  summarize(popularity = n()) %&gt;%\n  arrange(artist_name, desc(popularity)) %&gt;%\n  group_by(artist_name) %&gt;%\n  slice(1)\nmost_popular_songs\n\n# A tibble: 5 √ó 3\n# Groups:   artist_name [5]\n  artist_name    track_name  popularity\n  &lt;chr&gt;          &lt;chr&gt;            &lt;int&gt;\n1 Drake          One Dance          143\n2 Kanye West     Gold Digger         83\n3 Kendrick Lamar HUMBLE.            142\n4 Rihanna        Needed Me           79\n5 The Weeknd     Starboy            100\n\n# This finds the most popular song for each of the five most popular artists\n# which is One Dance, Gold Digger, HUMBLE., Needed Me, and Starboy respectively.\n\n\n\nQ1c\n\nggplot(top_songs, aes(x = artist_name, y = popularity, fill = artist_name)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Popularity of the Ten Most Popular Artists\",\n       x = \"Artist Name\", y = \"Popularity\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n# This code create a ggplot to visualize the relationship between 'pos' and the ten \n# most popular artists, showing that Drake has the highest popularity, while Khalid\n# has the lowest popularity. The bar chart shows that all of the artists have a \n# popularity above 100.\n\n\n\nQ1d\n\npid_artist_df &lt;- spotify_all %&gt;% \n  group_by(pid, playlist_name, artist_name) %&gt;% \n  summarise(n_artist = n_distinct(artist_name))\n\n# This creates a data frame with pid-artist level of observations"
  },
  {
    "objectID": "posts/nfl/nfl.html",
    "href": "posts/nfl/nfl.html",
    "title": "NFL",
    "section": "",
    "text": "Q2a\n\nNFL2022_stuffs &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n NFL2022_stuffs &lt;- NFL2022_stuffs[complete.cases(NFL2022_stuffs$posteam), ]\n\n\n\nQ2b\n\n filtered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(wp &gt; 0.2 & wp &lt; 0.75, down &lt;= 2, half_seconds_remaining &gt; 120)\n\n summary_pass &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\n\n\n\nQ2c\n\nlibrary(ggplot2)\n\n# Reordering posteam based on mean value of pass\n summary_pass$posteam &lt;- factor(summary_pass$posteam, levels =  summary_pass$posteam[order(summary_pass$mean_pass)])\n\n# Plotting\n ggplot(summary_pass, aes(x = mean_pass, y = posteam)) +\n  geom_point() +\n  labs(title = \"Mean Value of Pass for Each posteam\",\n       x = \"Percentage of pass plays\",\n       y = \"Team with possession\") +\n  theme_minimal()\n\n\n\n\n\n\nQ2d\n\nNFL2022_epa &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\nNFL2022_stuffs_EPA &lt;- NFL2022_stuffs %&gt;%\n  left_join(NFL2022_epa %&gt;% select(play_id, passer, receiver, epa), by = \"play_id\") %&gt;%\n  filter(!is.na(passer))\n\n\n\nQ2e\n\nweekly_trend &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(passer %in% c(\"J.Allen\", \"P.Mahomes\")) %&gt;%\n group_by(week, passer) %&gt;%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\n\n# Plotting\nggplot(weekly_trend, aes(x = week, y = mean_epa, color = passer)) +\n  geom_line() +\n  labs(title = \"NFL Weekly Trend of Mean EPA\",\n       x = \"Week\",\n       y = \"Mean EPA\") +\n theme_minimal()\n\n\n\n\n\n\nQ2f\n\nmean_epa_diff &lt;- weekly_trend %&gt;%\n  spread(passer, mean_epa) %&gt;%\n  mutate(diff_J_Allen_P_Mahomes = `J.Allen` - `P.Mahomes`)\n\n\n\nQ2g\n\npasser_summary &lt;- NFL2022_stuffs_EPA %&gt;%\n  group_by(posteam, passer) %&gt;%\n  summarize(mean_epa = mean(epa, na.rm = TRUE),\n            n_pass = n()) %&gt;%\n  filter(n_pass &gt;= quantile(n_pass, 0.75))\n\ntop_10_passers &lt;- passer_summary %&gt;%\n  group_by(passer) %&gt;%\n  summarize(mean_epa = mean(mean_epa, na.rm = TRUE)) %&gt;%\n  top_n(10, wt = mean_epa)"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Informative Analytical Solutions",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nSpotify\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nJake Marcell\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nNFL\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nJake Marcell\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "About this project üëè\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nmpg &lt;- ggplot2::mpg\n\n\n\n\n  \n\n\n\nskim(mpg) %&gt;% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n1\n4\n10\n0\n15\n0\n\n\nmodel\n1\n2\n22\n0\n38\n0\n\n\ntrans\n1\n8\n10\n0\n10\n0\n\n\ndrv\n1\n1\n1\n0\n3\n0\n\n\nfl\n1\n1\n1\n0\n5\n0\n\n\nclass\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n‚ñá‚ñÜ‚ñÜ‚ñÉ‚ñÅ\n\n\nyear\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\ncyl\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n‚ñá‚ñÅ‚ñá‚ñÅ‚ñá\n\n\ncty\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n‚ñÜ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nhwy\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n‚ñÖ‚ñÖ‚ñá‚ñÅ‚ñÅ"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "2.2 MPG and a Type of Cars",
    "text": "2.2 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) üöô üöö üöê.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  }
]